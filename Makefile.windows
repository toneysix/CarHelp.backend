#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe

INC = -Ihead -Ivendor\\boost_1_67_0
CFLAGS = -Wall -std=c++14 -fexceptions -fpermissive -D_WIN32_WINNT=0x0501 -DWINVER=0x0501 -D_WIN32_WINDOWS
RESINC = 
LIBDIR = -Lvendor\\boost_1_67_0\\libs
LIB = -lwsock32 vendor\\boost_1_67_0\\bin.v2\\libs\\system\\build\\gcc-5.1.0\\release\\link-static\\threading-multi\\libboost_system-mgw51-mt-x32-1_67.a vendor\\boost_1_67_0\\bin.v2\\libs\\thread\\build\\gcc-5.1.0\\release\\link-static\\threadapi-win32\\threading-multi\\libboost_thread-mgw51-mt-x32-1_67.a vendor\\boost_1_67_0\\bin.v2\\libs\\regex\\build\\gcc-5.1.0\\release\\link-static\\threading-multi\\libboost_regex-mgw51-mt-x32-1_67.a -llibws2_32
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -std=c++14 -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB) 
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj\\Debug
DEP_DEBUG = 
OUT_DEBUG = bin\\Debug\\CarHelpserver.exe

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB) 
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj\\Release
DEP_RELEASE = 
OUT_RELEASE = bin\\Release\\CarHelpserver.exe

OBJ_DEBUG = $(OBJDIR_DEBUG)\\main.o $(OBJDIR_DEBUG)\\src\\client.o $(OBJDIR_DEBUG)\\src\\core\\net\\socket.o $(OBJDIR_DEBUG)\\src\\network.o

OBJ_RELEASE = $(OBJDIR_RELEASE)\\main.o $(OBJDIR_RELEASE)\\src\\client.o $(OBJDIR_RELEASE)\\src\\core\\net\\socket.o $(OBJDIR_RELEASE)\\src\\network.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	cmd /c if not exist bin\\Debug md bin\\Debug
	cmd /c if not exist $(OBJDIR_DEBUG) md $(OBJDIR_DEBUG)
	cmd /c if not exist $(OBJDIR_DEBUG)\\src md $(OBJDIR_DEBUG)\\src
	cmd /c if not exist $(OBJDIR_DEBUG)\\src\\core\\net md $(OBJDIR_DEBUG)\\src\\core\\net

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)\\main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)\\main.o

$(OBJDIR_DEBUG)\\src\\client.o: src\\client.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\client.cpp -o $(OBJDIR_DEBUG)\\src\\client.o

$(OBJDIR_DEBUG)\\src\\core\\net\\socket.o: src\\core\\net\\socket.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\core\\net\\socket.cpp -o $(OBJDIR_DEBUG)\\src\\core\\net\\socket.o

$(OBJDIR_DEBUG)\\src\\network.o: src\\network.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\network.cpp -o $(OBJDIR_DEBUG)\\src\\network.o

clean_debug: 
	cmd /c del /f $(OBJ_DEBUG) $(OUT_DEBUG)
	cmd /c rd bin\\Debug
	cmd /c rd $(OBJDIR_DEBUG)
	cmd /c rd $(OBJDIR_DEBUG)\\src
	cmd /c rd $(OBJDIR_DEBUG)\\src\\core\\net

before_release: 
	cmd /c if not exist bin\\Release md bin\\Release
	cmd /c if not exist $(OBJDIR_RELEASE) md $(OBJDIR_RELEASE)
	cmd /c if not exist $(OBJDIR_RELEASE)\\src md $(OBJDIR_RELEASE)\\src
	cmd /c if not exist $(OBJDIR_RELEASE)\\src\\core\\net md $(OBJDIR_RELEASE)\\src\\core\\net

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)\\main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)\\main.o

$(OBJDIR_RELEASE)\\src\\client.o: src\\client.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\client.cpp -o $(OBJDIR_RELEASE)\\src\\client.o

$(OBJDIR_RELEASE)\\src\\core\\net\\socket.o: src\\core\\net\\socket.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\core\\net\\socket.cpp -o $(OBJDIR_RELEASE)\\src\\core\\net\\socket.o

$(OBJDIR_RELEASE)\\src\\network.o: src\\network.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\network.cpp -o $(OBJDIR_RELEASE)\\src\\network.o

clean_release: 
	cmd /c del /f $(OBJ_RELEASE) $(OUT_RELEASE)
	cmd /c rd bin\\Release
	cmd /c rd $(OBJDIR_RELEASE)
	cmd /c rd $(OBJDIR_RELEASE)\\src
	cmd /c rd $(OBJDIR_RELEASE)\\src\\core\\net

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

